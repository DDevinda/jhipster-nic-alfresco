{"remainingRequest":"/home/dushan/Desktop/projects/CA/nic_backend/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/dushan/Desktop/projects/CA/nic_backend/node_modules/ts-loader/index.js??ref--9-3!/home/dushan/Desktop/projects/CA/nic_backend/node_modules/angular-router-loader/src/index.js!/home/dushan/Desktop/projects/CA/nic_backend/node_modules/tslint-loader/index.js!/home/dushan/Desktop/projects/CA/nic_backend/src/main/webapp/app/account/register/register.component.ts","dependencies":[{"path":"/home/dushan/Desktop/projects/CA/nic_backend/src/main/webapp/app/account/register/register.component.ts","mtime":1568800492165},{"path":"/home/dushan/Desktop/projects/CA/nic_backend/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/dushan/Desktop/projects/CA/nic_backend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dushan/Desktop/projects/CA/nic_backend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dushan/Desktop/projects/CA/nic_backend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/dushan/Desktop/projects/CA/nic_backend/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/dushan/Desktop/projects/CA/nic_backend/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jLCBfZCwgX2U7CmltcG9ydCB7IENvbXBvbmVudCwgUmVuZGVyZXIsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7CmltcG9ydCB7IEVNQUlMX0FMUkVBRFlfVVNFRF9UWVBFLCBMT0dJTl9BTFJFQURZX1VTRURfVFlQRSB9IGZyb20gJ2FwcC9zaGFyZWQnOwppbXBvcnQgeyBMb2dpbk1vZGFsU2VydmljZSB9IGZyb20gJ2FwcC9jb3JlJzsKaW1wb3J0IHsgUmVnaXN0ZXIgfSBmcm9tICcuL3JlZ2lzdGVyLnNlcnZpY2UnOwpsZXQgUmVnaXN0ZXJDb21wb25lbnQgPSBjbGFzcyBSZWdpc3RlckNvbXBvbmVudCB7CiAgICBjb25zdHJ1Y3Rvcihsb2dpbk1vZGFsU2VydmljZSwgcmVnaXN0ZXJTZXJ2aWNlLCBlbGVtZW50UmVmLCByZW5kZXJlciwgZmIpIHsKICAgICAgICB0aGlzLmxvZ2luTW9kYWxTZXJ2aWNlID0gbG9naW5Nb2RhbFNlcnZpY2U7CiAgICAgICAgdGhpcy5yZWdpc3RlclNlcnZpY2UgPSByZWdpc3RlclNlcnZpY2U7CiAgICAgICAgdGhpcy5lbGVtZW50UmVmID0gZWxlbWVudFJlZjsKICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7CiAgICAgICAgdGhpcy5mYiA9IGZiOwogICAgICAgIHRoaXMucmVnaXN0ZXJGb3JtID0gdGhpcy5mYi5ncm91cCh7CiAgICAgICAgICAgIGxvZ2luOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbkxlbmd0aCgxKSwgVmFsaWRhdG9ycy5tYXhMZW5ndGgoNTApLCBWYWxpZGF0b3JzLnBhdHRlcm4oJ15bXy5AQS1aYS16MC05LV0qJCcpXV0sCiAgICAgICAgICAgIGVtYWlsOiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkLCBWYWxpZGF0b3JzLm1pbkxlbmd0aCg1KSwgVmFsaWRhdG9ycy5tYXhMZW5ndGgoMjU0KSwgVmFsaWRhdG9ycy5lbWFpbF1dLAogICAgICAgICAgICBwYXNzd29yZDogWycnLCBbVmFsaWRhdG9ycy5yZXF1aXJlZCwgVmFsaWRhdG9ycy5taW5MZW5ndGgoNCksIFZhbGlkYXRvcnMubWF4TGVuZ3RoKDUwKV1dLAogICAgICAgICAgICBjb25maXJtUGFzc3dvcmQ6IFsnJywgW1ZhbGlkYXRvcnMucmVxdWlyZWQsIFZhbGlkYXRvcnMubWluTGVuZ3RoKDQpLCBWYWxpZGF0b3JzLm1heExlbmd0aCg1MCldXQogICAgICAgIH0pOwogICAgfQogICAgbmdPbkluaXQoKSB7CiAgICAgICAgdGhpcy5zdWNjZXNzID0gZmFsc2U7CiAgICB9CiAgICBuZ0FmdGVyVmlld0luaXQoKSB7CiAgICAgICAgdGhpcy5yZW5kZXJlci5pbnZva2VFbGVtZW50TWV0aG9kKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJyNsb2dpbicpLCAnZm9jdXMnLCBbXSk7CiAgICB9CiAgICByZWdpc3RlcigpIHsKICAgICAgICBsZXQgcmVnaXN0ZXJBY2NvdW50ID0ge307CiAgICAgICAgY29uc3QgbG9naW4gPSB0aGlzLnJlZ2lzdGVyRm9ybS5nZXQoWydsb2dpbiddKS52YWx1ZTsKICAgICAgICBjb25zdCBlbWFpbCA9IHRoaXMucmVnaXN0ZXJGb3JtLmdldChbJ2VtYWlsJ10pLnZhbHVlOwogICAgICAgIGNvbnN0IHBhc3N3b3JkID0gdGhpcy5yZWdpc3RlckZvcm0uZ2V0KFsncGFzc3dvcmQnXSkudmFsdWU7CiAgICAgICAgaWYgKHBhc3N3b3JkICE9PSB0aGlzLnJlZ2lzdGVyRm9ybS5nZXQoWydjb25maXJtUGFzc3dvcmQnXSkudmFsdWUpIHsKICAgICAgICAgICAgdGhpcy5kb05vdE1hdGNoID0gJ0VSUk9SJzsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHJlZ2lzdGVyQWNjb3VudCA9IE9iamVjdC5hc3NpZ24oe30sIHJlZ2lzdGVyQWNjb3VudCwgeyBsb2dpbiwgZW1haWwsIHBhc3N3b3JkIH0pOwogICAgICAgICAgICB0aGlzLmRvTm90TWF0Y2ggPSBudWxsOwogICAgICAgICAgICB0aGlzLmVycm9yID0gbnVsbDsKICAgICAgICAgICAgdGhpcy5lcnJvclVzZXJFeGlzdHMgPSBudWxsOwogICAgICAgICAgICB0aGlzLmVycm9yRW1haWxFeGlzdHMgPSBudWxsOwogICAgICAgICAgICByZWdpc3RlckFjY291bnQgPSBPYmplY3QuYXNzaWduKHt9LCByZWdpc3RlckFjY291bnQsIHsgbGFuZ0tleTogJ2VuJyB9KTsKICAgICAgICAgICAgdGhpcy5yZWdpc3RlclNlcnZpY2Uuc2F2ZShyZWdpc3RlckFjY291bnQpLnN1YnNjcmliZSgoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnN1Y2Nlc3MgPSB0cnVlOwogICAgICAgICAgICB9LCByZXNwb25zZSA9PiB0aGlzLnByb2Nlc3NFcnJvcihyZXNwb25zZSkpOwogICAgICAgIH0KICAgIH0KICAgIG9wZW5Mb2dpbigpIHsKICAgICAgICB0aGlzLm1vZGFsUmVmID0gdGhpcy5sb2dpbk1vZGFsU2VydmljZS5vcGVuKCk7CiAgICB9CiAgICBwcm9jZXNzRXJyb3IocmVzcG9uc2UpIHsKICAgICAgICB0aGlzLnN1Y2Nlc3MgPSBudWxsOwogICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCAmJiByZXNwb25zZS5lcnJvci50eXBlID09PSBMT0dJTl9BTFJFQURZX1VTRURfVFlQRSkgewogICAgICAgICAgICB0aGlzLmVycm9yVXNlckV4aXN0cyA9ICdFUlJPUic7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAwICYmIHJlc3BvbnNlLmVycm9yLnR5cGUgPT09IEVNQUlMX0FMUkVBRFlfVVNFRF9UWVBFKSB7CiAgICAgICAgICAgIHRoaXMuZXJyb3JFbWFpbEV4aXN0cyA9ICdFUlJPUic7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICB0aGlzLmVycm9yID0gJ0VSUk9SJzsKICAgICAgICB9CiAgICB9Cn07ClJlZ2lzdGVyQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFsKICAgIENvbXBvbmVudCh7CiAgICAgICAgc2VsZWN0b3I6ICdqaGktcmVnaXN0ZXInLAogICAgICAgIHRlbXBsYXRlVXJsOiAnLi9yZWdpc3Rlci5jb21wb25lbnQuaHRtbCcKICAgIH0pLAogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIExvZ2luTW9kYWxTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBMb2dpbk1vZGFsU2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBSZWdpc3RlciAhPT0gInVuZGVmaW5lZCIgJiYgUmVnaXN0ZXIpID09PSAiZnVuY3Rpb24iID8gX2IgOiBPYmplY3QsIHR5cGVvZiAoX2MgPSB0eXBlb2YgRWxlbWVudFJlZiAhPT0gInVuZGVmaW5lZCIgJiYgRWxlbWVudFJlZikgPT09ICJmdW5jdGlvbiIgPyBfYyA6IE9iamVjdCwgdHlwZW9mIChfZCA9IHR5cGVvZiBSZW5kZXJlciAhPT0gInVuZGVmaW5lZCIgJiYgUmVuZGVyZXIpID09PSAiZnVuY3Rpb24iID8gX2QgOiBPYmplY3QsIHR5cGVvZiAoX2UgPSB0eXBlb2YgRm9ybUJ1aWxkZXIgIT09ICJ1bmRlZmluZWQiICYmIEZvcm1CdWlsZGVyKSA9PT0gImZ1bmN0aW9uIiA/IF9lIDogT2JqZWN0XSkKXSwgUmVnaXN0ZXJDb21wb25lbnQpOwpleHBvcnQgeyBSZWdpc3RlckNvbXBvbmVudCB9Owo="},{"version":3,"file":"/home/dushan/Desktop/projects/CA/nic_backend/src/main/webapp/app/account/register/register.component.ts","sourceRoot":"","sources":["/home/dushan/Desktop/projects/CA/nic_backend/node_modules/angular-router-loader/src/index.js!/home/dushan/Desktop/projects/CA/nic_backend/node_modules/tslint-loader/index.js!/home/dushan/Desktop/projects/CA/nic_backend/src/main/webapp/app/account/register/register.component.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAyB,QAAQ,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAEvF,OAAO,EAAE,WAAW,EAAa,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAGpE,OAAO,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,MAAM,YAAY,CAAC;AAC9E,OAAO,EAAE,iBAAiB,EAAE,MAAM,UAAU,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAM9C,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAe5B,YACU,iBAAoC,EACpC,eAAyB,EACzB,UAAsB,EACtB,QAAkB,EAClB,EAAe;QAJf,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAU;QACzB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,OAAE,GAAF,EAAE,CAAa;QAZzB,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC/H,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YACxG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACxF,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAChG,CAAC,CAAC;IAQA,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IACxG,CAAC;IAED,QAAQ;QACN,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;QACrD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;QACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3D,IAAI,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,EAAE;YACjE,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;SAC3B;aAAM;YACL,eAAe,qBAAQ,eAAe,IAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,GAAE,CAAC;YACjE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,eAAe,qBAAQ,eAAe,IAAE,OAAO,EAAE,IAAI,GAAE,CAAC;YAExD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAClD,GAAG,EAAE;gBACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,CAAC,EACD,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CACxC,CAAC;SACH;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;IAEO,YAAY,CAAC,QAA2B;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,uBAAuB,EAAE;YAC9E,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;SAChC;aAAM,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,uBAAuB,EAAE;YACrF,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACtB;IACH,CAAC;CACF,CAAA;AArEY,iBAAiB;IAJ7B,SAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,WAAW,EAAE,2BAA2B;KACzC,CAAC;iEAiB6B,iBAAiB,oBAAjB,iBAAiB,oDACnB,QAAQ,oBAAR,QAAQ,oDACb,UAAU,oBAAV,UAAU,oDACZ,QAAQ,oBAAR,QAAQ,oDACd,WAAW,oBAAX,WAAW;GApBd,iBAAiB,CAqE7B;SArEY,iBAAiB","sourcesContent":["import { Component, OnInit, AfterViewInit, Renderer, ElementRef } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared';\nimport { LoginModalService } from 'app/core';\nimport { Register } from './register.service';\n\n@Component({\n  selector: 'jhi-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit, AfterViewInit {\n  doNotMatch: string;\n  error: string;\n  errorEmailExists: string;\n  errorUserExists: string;\n  success: boolean;\n  modalRef: NgbModalRef;\n\n  registerForm = this.fb.group({\n    login: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(50), Validators.pattern('^[_.@A-Za-z0-9-]*$')]],\n    email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]]\n  });\n\n  constructor(\n    private loginModalService: LoginModalService,\n    private registerService: Register,\n    private elementRef: ElementRef,\n    private renderer: Renderer,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.success = false;\n  }\n\n  ngAfterViewInit() {\n    this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\n  }\n\n  register() {\n    let registerAccount = {};\n    const login = this.registerForm.get(['login']).value;\n    const email = this.registerForm.get(['email']).value;\n    const password = this.registerForm.get(['password']).value;\n    if (password !== this.registerForm.get(['confirmPassword']).value) {\n      this.doNotMatch = 'ERROR';\n    } else {\n      registerAccount = { ...registerAccount, login, email, password };\n      this.doNotMatch = null;\n      this.error = null;\n      this.errorUserExists = null;\n      this.errorEmailExists = null;\n      registerAccount = { ...registerAccount, langKey: 'en' };\n\n      this.registerService.save(registerAccount).subscribe(\n        () => {\n          this.success = true;\n        },\n        response => this.processError(response)\n      );\n    }\n  }\n\n  openLogin() {\n    this.modalRef = this.loginModalService.open();\n  }\n\n  private processError(response: HttpErrorResponse) {\n    this.success = null;\n    if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\n      this.errorUserExists = 'ERROR';\n    } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\n      this.errorEmailExists = 'ERROR';\n    } else {\n      this.error = 'ERROR';\n    }\n  }\n}\n"]}]}